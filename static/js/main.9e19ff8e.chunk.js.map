{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["WindowHead","props","react_default","a","createElement","className","title","CustomPlayer","withSoundCloudAudio","soundCloudAudio","playing","track","currentTime","play","pause","App_WindowHead","href","components","Object","assign","duration","onClick","class","genre","src","alt","width","App","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","help","resolveUrl","clientId","onReady","console","log","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9e19ff8e.chunk.js","sourcesContent":["import React from 'react';\n\nimport {  Timer } from 'react-soundplayer/components';\nimport { withSoundCloudAudio } from 'react-soundplayer/addons';\nimport './win95.css'\n\nconst clientId = 'q241TWlfmzYAESNz2Y7GNCbSGeQ6mKL2';\nconst resolveUrl = 'https://soundcloud.com/superfly600/aesthetic-1-hour-vaporwave-mix';\n\nconst WindowHead = (props) => {\n    return (\n        <div className=\"windows-header\">\n            <div className=\"windows-title\">                                \n            <span className=\"cd-player\"></span>CD player -  {props.title}                              \n            </div> \n        </div>\n    );\n};\n\nconst Windown = () => {\n    return (\n        <div className=\"overlay-win\"> Not Ready</div>\n\n    );\n};\n\nconst CustomPlayer = withSoundCloudAudio(props => {\n  const { soundCloudAudio, playing, track ,currentTime } = props;\n  const play = () => {\n    if (playing) {\n      soundCloudAudio.pause();\n    } else {\n      soundCloudAudio.play();\n    }\n  };\n\n  if (!track) {\n    return <div className=\"\"><div className=\"center-align\"><img src= 'https://cdn140.picsart.com/268237737024211.png?r1024x1024' alt =''    width=\"23px\"/></div></div>;\n  }\n \n\n  return (\n    <div>\n\n        \n\n      <div className=\"container\">\n\n      \n            <br/>\n            <div className=\"windows-box\">\n                <div className=\"windows\">\n                    <WindowHead title={track.title}/>\n                    <div className=\"windows-container\">\n                        <ul className=\"windows-toolbar\">  \n                            <li className=\"toolbar-item\"> <a href=\"!#\" className=\"windows-link\">Disc </a> </li> \n                            <li className=\"toolbar-item\"> <a href=\"!#\" className=\"windows-link\">View </a></li>                            \n                            <li className=\"toolbar-item\"> <a href=\"!#\" className=\"windows-link\">Option </a> </li>\n                            <li className=\"toolbar-item\"> <a href=\"!#\" className=\"windows-link\">Help </a></li>\n                        </ul>                        \n                    </div>\n                </div>\n                \n                <div className=\"row\">\n                    <div className=\"col s6\">\n                        <div className=\"clock-display\">\n                                <span className=\"text-clock-display\"> \n                                  <Timer  className=\"custom-player-timer\"\n                                  duration={track ? track.duration / 1000 : 0} \n                                  currentTime={currentTime} \n                                  {...props} />\n                                </span>                        \n                        </div>\n                    </div>\n                    <div className=\"col s6\">\n                        <div className=\"player-control\">\n                                <button className=\"play-button\" \n                                onClick={() => play()}><i class=\"tiny material-icons \">play_arrow</i> </button>\n                                <button className=\"player-button\" onClick={() => play()}> <i class=\"tiny material-icons\">pause</i> </button>\n                                <button className=\"player-button\"> <i class=\"tiny material-icons\">stop</i></button>\n                                <button className=\"player-button\"> <i class=\"tiny material-icons\">skip_previous</i></button>\n                                <button className=\"player-button\"> <i class=\"tiny material-icons\">fast_rewind</i></button>\n                                <button className=\"player-button\"> <i class=\"tiny material-icons\">fast_forward</i></button>\n                                <button className=\"player-button\"> <i class=\"tiny material-icons\">skip_next</i></button> \n                        </div>\n                    </div>\n                </div>\n\n\n                <div className=\"row\">\n                   <div className=\"windows-row\">\n                        <div className=\"col s1\">Title</div>\n                        <div className=\"col s11\"><div className=\"player-input truncate\" > {track.title ? track.title : `Data or no disc  [D:]`}</div></div>\n                    </div>\n                    <div className=\"windows-row\">\n                        <div className=\"col s1\">Artist</div>\n                        <div className=\"col s11\"><div className=\"player-input-of truncate\" >Many</div></div>\n                    </div> \n                    <div className=\"windows-row\">\n                        <div className=\"col s1\">Genre</div>\n                        <div className=\"col s11\"><div className=\"player-input\" >{track.genre} </div></div>\n                    </div> \n                </div>\n                <div className=\"row \">\n                    <div className=\"windows-row\">\n                        <div className=\"col s6\"><div className=\"player-input-of\">Total Play: {currentTime} m:s</div></div>\n                        <div className=\"col s6\"><div className=\"player-input-of\">Track: {track.duration} m:s</div></div>\n                    </div>\n                </div>\n        </div>\n      </div>\n    </div>\n  );\n});\n\n\nclass App extends React.Component {\n\n    constructor () {\n        super();\n        this.state = {\n            help:true\n        }\n    }\n    render() {\n        \n      return <div>\n          \n          <CustomPlayer\n            resolveUrl={resolveUrl}\n            clientId={clientId}\n            help = {this.state.help}\n            onReady={() => {\n                console.log('player url ready!');\n            }} />\n      </div>;\n    }\n  }\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}